@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a class="nav-link" style="color:white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name.Split("@")[0]!</a>
    </li>
    <li class="nav-item">
            <form class="form-inline" style="color:white" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link" style="color:white">Logout</button>
        </form>
    </li>
}
else
{
<<<<<<< HEAD
    <li class="nav-item" >
            <a class="nav-link" style="color:white" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link" style="color:white" asp-area="Identity" asp-page="/Account/Login">Login</a>
=======
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
>>>>>>> origin/main
    </li>
}
</ul>
